scalar Date

enum STATUS {
  ERROR
}

type User {
  userId: String!
  username: String!
  email: String!
  password: String
  createdAt: Date!
  updatedAt: Date!
}

type Users {
  data: [User]!
}

type Error {
  status: STATUS!
  message: String!
}

union Result = User | Error | Users

type Query {
  dataUsers: Result
  dataUser(id: String): Result
}

type Mutation {
  register(username: String!, email: String!, password: String!): Result
}
