generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    String    @id @default(uuid()) @db.VarChar(100)
  username  String    @unique @db.VarChar(50)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      ROLE      @default(USER)
  expiredAt DateTime?
  status    STATUS    @default(PENDING)
  diary     Diary[]
  Otp       Otp?
  token     Token?
}

model Token {
  tokenId      String  @id @default(uuid()) @db.VarChar(100)
  accessToken  String  @db.VarChar(255)
  refreshToken String  @db.VarChar(255)
  userId       String? @unique @db.VarChar(255)
  user         User?   @relation(fields: [userId], references: [userId])
}

model Diary {
  diaryId      String       @id @default(uuid()) @db.VarChar(100)
  title        String       @db.VarChar(100)
  content      String       @db.VarChar(5000)
  userId       String       @db.VarChar(255)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  status_diary STATUS_DIARY @default(PUBLIC)
  user         User?        @relation(fields: [userId], references: [userId])
}

model Otp {
  otpId     String    @id @default(uuid()) @db.VarChar(100)
  userId    String    @unique @db.VarChar(100)
  otp       String    @db.VarChar(10)
  createdAt DateTime  @default(now())
  expiredAt DateTime?
  user      User      @relation(fields: [userId], references: [userId])
}

enum ROLE {
  USER
  ADMIN
}

enum STATUS_DIARY {
  PUBLIC
  PRIVATE
}

enum STATUS {
  ACTIVE
  PENDING
}
