// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  ADMIN
}

enum ACCESS {
  PUBLIC
  PRIVATE
}

enum STATUS {
  ACTIVE
  PENDING
}

model User {
  userId    String   @id @default(uuid()) @db.VarChar(100)
  username  String   @unique @db.VarChar(50)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  role      ROLE     @default(USER)
  status    STATUS   @default(PENDING)
  token     Token?
  diary     Diary[]
  Otp       Otp?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Token {
  tokenId      String  @id @default(uuid()) @db.VarChar(100)
  accessToken  String  @db.VarChar(255)
  refreshToken String  @db.VarChar(255)
  user         User?   @relation(fields: [userId], references: [userId])
  userId       String? @unique @db.VarChar(255)
}

model Diary {
  diaryId   String   @id @default(uuid()) @db.VarChar(100)
  access    ACCESS   @default(PUBLIC)
  title     String   @db.VarChar(100)
  content   String   @db.VarChar(5000)
  user      User     @relation(fields: [userId], references: [userId])
  userId    String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Otp {
  otpId     String    @id @default(uuid()) @db.VarChar(100)
  user      User      @relation(fields: [userId], references: [userId])
  userId    String    @unique @db.VarChar(100)
  otp       String    @db.VarChar(10)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expiredAt DateTime?
}
